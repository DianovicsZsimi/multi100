---
title: "Multi100: Analysis"
format: html
---

TODO:
years of experience integer!

# Loading packages

```{r}
library(tidyverse)
```

# Read data

```{r}
processed <- readr::read_csv(here::here("data/source/Multi100_Big_Dataset.csv"))
```

# Exploratory data analysis

There are `r processed %>% distinct(Paper_ID) %>% nrow()` unique papers in the dataset. The analyst id is missing in `r processed %>% filter(is.na(Analyst_ID)) %>% nrow()` cases.

The number of analyses per paper.

```{r}
processed %>% 
  count(Paper_ID) %>% 
  arrange(desc(n))
```

There are `r processed %>% filter(is.na(Direction_of_Result)) %>% nrow()` responses for the survey question regarding the direction of the results.

# Do different analysts arrive at the same conclusions as the analyst of the original study?
## Main figure

Prepearing the figure data.

```{r}
# Distinct values of Direction_of_Result
distinct(processed, Direction_of_Result)

conclusions_main_data <-
  processed %>% 
  select(Paper_ID, Direction_of_Result) %>% 
  count(Paper_ID, Direction_of_Result) %>% 
  ungroup() %>% 
  mutate(
    Direction_of_Result = forcats::fct_relevel(Direction_of_Result, c("Same as claimed by the original study", "Opposite as claimed by the original study"))
  ) %>%
  tidyr::complete(Paper_ID, Direction_of_Result, fill = list(n = 0)) %>% 
  group_by(Paper_ID) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100,
    ) %>% 
  ungroup() %>% 
  mutate(
    # TODO: Check if there is a more tidy solution
    Paper_ID = fct_reorder(Paper_ID, ifelse(Direction_of_Result == "Same as claimed by the original study", percentage, NA), .desc = TRUE, .na_rm = TRUE)
    )
```

Creating the figure.

```{r}
conclusion_main_plot <-
  conclusions_main_data %>% 
  ggplot() +
  aes(
    y = Paper_ID,
    x = percentage,
    fill = Direction_of_Result
  ) +
  geom_bar(
    stat = "identity",
    width = 0.6
    ) +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  labs(
    fill = "Direction of\nthe results",
    x = "Percentage"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_text(size = 8),
    axis.text.x = element_text(size = 10),
    axis.title.x = element_text(size = 15),
    legend.position = "bottom",
    legend.justification = "right",
    legend.box = "horizontal",
    legend.text = element_text(size = 10),
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.background = element_blank(),
    panel.grid = element_blank()
    )

ggsave(here::here("figures/conclusion_main_plot.jpg"), conclusion_main_plot, width = 8.27, height = 11.69, dpi = 300)
```

## By discipline

```{r}
conclusions_discipline_data <-
  processed %>% 
  select(Paper_ID, Paper_Discipline, Direction_of_Result) %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  count(Paper_Discipline, Direction_of_Result) %>% 
  ungroup() %>% 
  mutate(
    Direction_of_Result = forcats::fct_relevel(Direction_of_Result, c("Same as claimed by the original study", "Opposite as claimed by the original study")),
# TODO: Do this during data preprocessing once harry sends me the code
    Paper_Discipline = str_to_title(Paper_Discipline)
  ) %>%
  group_by(Paper_Discipline) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100,
    ) %>% 
  ungroup()

conclusions_discipline_plot <- 
  conclusions_discipline_data %>% 
  ggplot() +
  aes(
    y = Paper_Discipline,
    x = percentage,
    fill = Direction_of_Result
  ) +
  geom_bar(
    stat = "identity",
    width = 0.8
    ) +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  scale_y_discrete(expand = c(0, 0)) +
  labs(
    fill = "Direction of\nthe results",
    x = "Percentage"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    legend.position = "bottom",
    legend.text = element_text(size = 6),
    panel.background = element_blank(),
    panel.grid = element_blank()
    )

ggsave(here::here("figures/conclusions_discipline_plot.jpg"), conclusions_discipline_plot, dpi = 300)
```

## By expertise

```{r}
conclusions_expertise_data <-
  processed %>% 
  select(Paper_ID, Expertise_Self_Rating, Direction_of_Result) %>% 
  count(Expertise_Self_Rating, Direction_of_Result) %>% 
  ungroup() %>% 
  mutate(
    Direction_of_Result = forcats::fct_relevel(Direction_of_Result, c("Same as claimed by the original study", "Opposite as claimed by the original study")),
    Expertise_Self_Rating = as.factor(Expertise_Self_Rating)
  ) %>%
  group_by(Expertise_Self_Rating) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100,
    ) %>% 
  ungroup()

conclusions_expertise_plot <-
  conclusions_expertise_data %>% 
  ggplot() +
  aes(
    y = Expertise_Self_Rating,
    x = percentage,
    fill = Direction_of_Result
  ) +
  geom_bar(
    stat = "identity",
    width = 0.8
    ) +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  scale_y_discrete(expand = c(0, 0)) +
  labs(
    fill = "Direction of\nthe results",
    x = "Percentage"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.background = element_blank(),
    panel.grid = element_blank()
    )

ggsave(here::here("figures/conclusions_expertise_plot.jpg"), conclusions_expertise_plot, dpi = 300)
```

## By suitability of their self-judged analysis

```{r}

```

## By sample size

```{r}

```

# Do different analysts arrive at the same effect estimates as the analyst of the original study?
## Main figure

Preparing the figure data.

```{r}
# TODO: Possible solution by adding the original effect size to the plot separately would be more concise?
effect_main_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Paper_ID, r_analyst, r_original) %>% 
  group_by(Paper_ID) %>%
  mutate(
    effect_size_type = paste0("re-analysis_0", row_number()),
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05
    ) %>% 
  # TODO: Look for a more tidy way to do this
  pivot_longer(cols = c(r_analyst, r_original),
               names_to = "name",
               values_to = "effect_size") %>%
  mutate(effect_size_type = case_when(
    name == "r_original" ~ "original",
    TRUE ~ effect_size_type)) %>% 
  distinct(effect_size_type, .keep_all = TRUE) %>% 
  select(-name) %>% 
  ungroup()
```

Creating the figure.

```{r}
# Shapes
shape_vector <- c(
  setNames(rep(16, 7), paste0("re-analysis_", sprintf("%02d", 1:7))),
  "original" = 15
)
# Colors
color_vector <- c(
  setNames(c("#F8766D", "#CD9600", "#7CAE00", "#00BE67", "#00BFC4", "#00A9FF", "#C77CFF"), paste0("re-analysis_", sprintf("%02d", 1:7))),
  "original" = "black"
)

effect_main_plot <-
  effect_main_data %>% 
  ggplot() +
  aes(
    y = Paper_ID,
    x = effect_size,
    color = effect_size_type,
    shape = effect_size_type
  ) +
  geom_point() +
  geom_pointrange(aes(xmin = tolarence_region_lower, xmax = tolarence_region_upper), data = . %>% filter(effect_size_type == "original"), show.legend = FALSE) +
  # guides(color = guide_legend(ncol = 6)) +
  scale_shape_manual(values = shape_vector) +
  scale_color_manual(values = color_vector) +
  labs(
    x = "Effect size in r"
  ) +
  theme(
    axis.ticks = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    legend.justification = "left",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_main_plot.jpg"), effect_main_plot, width = 8.27, height = 11.69, dpi = 300)
```

## What percentage of the new effect sizes were beyond the tolerance region?
### By paper

```{r}
effect_region_all_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Paper_ID, r_analyst, r_original) %>% 
  group_by(Paper_ID) %>%
  mutate(
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05,
    is_within_region = case_when(
      r_analyst <= tolarence_region_lower | r_analyst >= tolarence_region_upper ~ "No",
      r_analyst >= tolarence_region_lower | r_analyst <= tolarence_region_upper ~ "Yes"
      )
    ) %>% 
  count(Paper_ID, is_within_region) %>% 
  ungroup() %>% 
  tidyr::complete(Paper_ID, is_within_region, fill = list(n = 0)) %>% 
  group_by(Paper_ID) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100
  ) %>% 
  ungroup() %>% 
  mutate(
    # TODO: Check if there is a more tidy solution
    Paper_ID = fct_reorder(Paper_ID, ifelse(is_within_region == "Yes", percentage, NA), .desc = TRUE, .na_rm = TRUE)
    )

effect_region_all_plot <-
  effect_region_all_data %>% 
  ggplot() +
  aes(
    x = percentage,
    y = Paper_ID,
    fill = is_within_region
  ) +
  geom_bar(stat = "identity") +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  labs(
    x = "Percentage",
    fill = "Within region?"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_region_all_plot.jpg"), effect_region_all_plot, width = 8.27, height = 11.69, dpi = 300)
```

### By discipline

```{r}
processed %>% 
  distinct(Paper_ID, .keep_all = T) %>% 
  count(Paper_Discipline) %>% 
  arrange(n)

effect_region_discipline_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Paper_Discipline, r_analyst, r_original) %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  mutate(
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05
  ) %>% 
  group_by(Paper_Discipline) %>%
  mutate(
    is_within_region = case_when(
      r_analyst <= tolarence_region_lower | r_analyst >= tolarence_region_upper ~ "No",
      r_analyst >= tolarence_region_lower | r_analyst <= tolarence_region_upper ~ "Yes"
      )
    ) %>% 
  count(Paper_Discipline, is_within_region) %>% 
  group_by(Paper_Discipline) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100
  ) %>% 
  ungroup()

effect_region_discipline_plot <-
  effect_region_discipline_data %>% 
  ggplot() +
  aes(
    x = percentage,
    y = Paper_Discipline,
    fill = is_within_region
  ) +
  geom_bar(stat = "identity") +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  labs(
    x = "Percentage",
    fill = "Within region?"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_region_discipline_plot.jpg"), effect_region_discipline_plot, dpi = 300)
```

```{r}
processed %>% 
  distinct(Paper_ID, .keep_all = T) %>% 
  count(Paper_Discipline) %>% 
  arrange(n)

effect_robustness_discipline_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Paper_ID, Paper_Discipline, r_analyst) %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  group_by(Paper_ID, Paper_Discipline) %>% 
  filter(r_analyst == min(r_analyst) | r_analyst == max(r_analyst)) %>% 
  summarise(
    robustness = max(r_analyst) - min(r_analyst)
  ) %>% 
  ungroup()


effect_robustness_discipline_plot <-
  effect_robustness_discipline_data %>% 
  ggplot() +
  aes(
    x = Paper_Discipline,
    y = robustness
  ) +
  geom_jitter(width = 0.1) +
  labs(
    x = "Discipline",
    y = "Robustness",
  ) +
  theme(
    axis.ticks = element_blank(),
    plot.margin = margin(t = 20, r = 20, b = 20, l = 20, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_robustness_discipline_plot.jpg"), effect_robustness_discipline_plot, dpi = 300)
```

### By expertise

There are `r processed %>% filter(is.na(Expertise_Self_Rating)) %>% nrow()` missing values for the expertise survey question.

```{r}
processed %>% 
  distinct(Expertise_Self_Rating)

effect_region_expertise_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Expertise_Self_Rating, r_analyst, r_original) %>% 
  mutate(
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05,
    Expertise_Self_Rating = as.factor(Expertise_Self_Rating)
  ) %>% 
  group_by(Expertise_Self_Rating) %>%
  mutate(
    is_within_region = case_when(
      r_analyst <= tolarence_region_lower | r_analyst >= tolarence_region_upper ~ "No",
      r_analyst >= tolarence_region_lower | r_analyst <= tolarence_region_upper ~ "Yes"
      )
    ) %>% 
  count(Expertise_Self_Rating, is_within_region) %>% 
  group_by(Expertise_Self_Rating) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100
  ) %>% 
  ungroup()

effect_region_expertise_plot <-
  effect_region_expertise_data %>% 
  ggplot() +
  aes(
    x = percentage,
    y = Expertise_Self_Rating,
    fill = is_within_region
  ) +
  geom_bar(stat = "identity") +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  labs(
    x = "Percentage",
    fill = "Within region?"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_region_expertise_plot.jpg"), effect_region_expertise_plot, dpi = 300)
```

### By suitability of their self-judged analysis

There are `r processed %>% filter(is.na(Confidence_in_Approach)) %>% nrow()` missing values for the suitability of the analysis survey question.

```{r}
processed %>% 
  distinct(Confidence_in_Approach)

effect_region_suitability_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Confidence_in_Approach, r_analyst, r_original) %>% 
  mutate(
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05,
    Confidence_in_Approach = as.factor(Confidence_in_Approach)
  ) %>% 
  group_by(Confidence_in_Approach) %>%
  mutate(
    is_within_region = case_when(
      r_analyst <= tolarence_region_lower | r_analyst >= tolarence_region_upper ~ "No",
      r_analyst >= tolarence_region_lower | r_analyst <= tolarence_region_upper ~ "Yes"
      )
    ) %>% 
  count(Confidence_in_Approach, is_within_region) %>% 
  group_by(Confidence_in_Approach) %>% 
  mutate(
    N = sum(n),
    relative_frequency = n / N,
    percentage = relative_frequency * 100
  ) %>% 
  ungroup()

effect_region_suitability_plot <- 
  effect_region_suitability_data %>% 
  ggplot() +
  aes(
    x = percentage,
    y = Confidence_in_Approach,
    fill = is_within_region
  ) +
  geom_bar(stat = "identity") +
  scale_x_continuous(
    expand = c(0, 0),
    labels = scales::percent_format(scale = 1)) +
  labs(
    x = "Percentage",
    fill = "Within region?"
  ) +
  theme(
    axis.ticks = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.box = "horizontal",
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_region_suitability_plot.jpg"), effect_region_suitability_plot, dpi = 300)
```

### By sample size

There are `r processed %>% filter(is.na(Model_Sample_Size)) %>% nrow()` missing values for the sample size survey question.

```{r}

```

