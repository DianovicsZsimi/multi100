---
title: "Multi100: Analysis"
format: html
editor_options: 
  chunk_output_type: console
---

TODO:
years of experience integer!

# Setup
## Loading packages

```{r}
library(tidyverse)
```

## Load custom functions

```{r}
source(here::here("R/utils.R"))
```

# Read data

```{r}
processed <- readr::read_csv(here::here("data/processed/multi100_processed_data.csv"))
```

# Exploratory data analysis

There are `r processed %>% distinct(Paper_ID) %>% nrow()` unique papers in the dataset. The analyst id is missing in `r processed %>% filter(is.na(Analyst_ID)) %>% nrow()` cases.

The number of analyses per paper.

```{r}
processed %>% 
  count(Paper_ID) %>% 
  arrange(desc(n))
```

There are `r processed %>% filter(is.na(Direction_of_Result)) %>% nrow()` responses for the survey question regarding the direction of the results.

# Do different analysts arrive at the same conclusions as the analyst of the original study?
## Main figure

Preparing the figure data.

```{r}
# Distinct values of Direction_of_Result
distinct(processed, Direction_of_Result)

conclusions_main_data <- 
  processed %>% 
  # TODO: Put this in the preprocessing file
  mutate(categorisation = case_when(
    Task1_Categorisation == "The results show evidence for the relationship/effect as described in the claim provided in your task" ~ "Same conclusion",
    Task1_Categorisation %in% c(
      "The results do not show evidence for or against the relationship/effect as described in the claim provided in your task",
      "The results show evidence for the null-hypothesis"
      ) ~ "No effect/inconclusive",
    Task1_Categorisation == "The results show evidence for opposite relationship/effect as described in the claim provided in your task" ~ "Opposite effect",
    TRUE ~ NA_character_)
    ) %>% 
  calculate_conclusion(., Paper_ID, categorisation) %>% 
  # mutate(
  #   # TODO: Check if there is a more tidy solution
  #   Paper_ID = fct_reorder(Paper_ID, ifelse(categorisation == "Effect", percentage, NA), .desc = TRUE, .na_rm = TRUE)
  #   ) %>%
    mutate(
    # TODO: Check if there is a more tidy solution
    Paper_ID = fct_reorder(Paper_ID, percentage, .desc = TRUE, .na_rm = TRUE)
    )
```

Creating the figure.

```{r}
conclusion_main_plot <-
  plot_conclusion(conclusions_main_data, Paper_ID, categorisation) +
  theme(
    axis.text.y = element_text(size = 8),
    axis.text.x = element_text(size = 10),
    axis.title.x = element_text(size = 15),
    legend.justification = "right",
    legend.box = "horizontal",
    legend.text = element_text(size = 10)
    )

ggsave(here::here("figures/conclusion_main_plot.jpg"), conclusion_main_plot, width = 8.27, height = 11.69, dpi = 300)

conclusion_main_plot
```

## By discipline

```{r}
conclusions_discipline_data <- 
  processed %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  mutate(Paper_Discipline = str_to_title(Paper_Discipline)) %>% 
    mutate(categorisation = case_when(
    Task1_Categorisation == "The results show evidence for the relationship/effect as described in the claim provided in your task" ~ "Same conclusion",
    Task1_Categorisation %in% c(
      "The results do not show evidence for or against the relationship/effect as described in the claim provided in your task",
      "The results show evidence for the null-hypothesis"
      ) ~ "No effect/inconclusive",
    Task1_Categorisation == "The results show evidence for opposite relationship/effect as described in the claim provided in your task" ~ "Opposite effect",
    TRUE ~ NA_character_)
    ) %>% 
  calculate_conclusion(., Paper_Discipline, categorisation)

conclusions_discipline_plot <- plot_conclusion(conclusions_discipline_data, Paper_Discipline, categorisation) + theme(legend.text = element_text(size = 6))

ggsave(here::here("figures/conclusions_discipline_plot.jpg"), conclusions_discipline_plot, dpi = 300)

conclusions_discipline_plot
```

## By expertise

```{r}
conclusions_expertise_data <- calculate_conclusion(processed, Expertise_Self_Rating)

conclusions_expertise_plot <- plot_conclusion(conclusions_expertise_data, Expertise_Self_Rating) + theme(legend.text = element_text(size = 6))

ggsave(here::here("figures/conclusions_expertise_plot.jpg"), conclusions_expertise_plot, dpi = 300)

conclusions_expertise_plot
```

## By suitability of their self-judged analysis

```{r}
conclusions_suitability_data <- calculate_conclusion(processed, Confidence_in_Approach)

conclusions_suitability_plot <- plot_conclusion(conclusions_suitability_data, Confidence_in_Approach) + theme(legend.text = element_text(size = 6))

ggsave(here::here("figures/conclusions_suitability_plot.jpg"), conclusions_suitability_plot, dpi = 300)

conclusions_suitability_plot
```

## By sample size

```{r}

```

# Do different analysts arrive at the same effect estimates as the analyst of the original study?
## Main figure

Preparing the figure data.

```{r}
# TODO: Possible solution by adding the original effect size to the plot separately would be more concise?
effect_main_data <-
  processed %>% 
  # TODO: Simulating effect size variable replace it later
  # Also filter needs to be added as not all the studies have effect sizes?
  mutate(r_analyst = runif(508, min = 0.01, max = 0.99)) %>%
  group_by(Paper_ID) %>% 
  mutate(r_original = runif(1, min = 0.01, max = 0.99)) %>% 
  ungroup() %>% 
  select(Paper_ID, r_analyst, r_original) %>% 
  group_by(Paper_ID) %>%
  mutate(
    effect_size_type = paste0("re-analysis_0", row_number()),
    tolarence_region_lower = r_original - 0.05,
    tolarence_region_upper = r_original + 0.05
    ) %>% 
  # TODO: Look for a more tidy way to do this
  pivot_longer(cols = c(r_analyst, r_original),
               names_to = "name",
               values_to = "effect_size") %>%
  mutate(effect_size_type = case_when(
    name == "r_original" ~ "original",
    TRUE ~ effect_size_type)) %>% 
  distinct(effect_size_type, .keep_all = TRUE) %>% 
  select(-name) %>% 
  ungroup()
```

Creating the figure.

```{r}
# Shapes
shape_vector <- c(
  setNames(rep(16, 7), paste0("re-analysis_", sprintf("%02d", 1:7))),
  "original" = 15
)
# Colors
color_vector <- c(
  setNames(c("#F8766D", "#CD9600", "#7CAE00", "#00BE67", "#00BFC4", "#00A9FF", "#C77CFF"), paste0("re-analysis_", sprintf("%02d", 1:7))),
  "original" = "black"
)

effect_main_plot <-
  effect_main_data %>% 
  ggplot() +
  aes(
    y = Paper_ID,
    x = effect_size,
    color = effect_size_type,
    shape = effect_size_type
  ) +
  geom_point() +
  geom_pointrange(aes(xmin = tolarence_region_lower, xmax = tolarence_region_upper), data = . %>% filter(effect_size_type == "original"), show.legend = FALSE) +
  # guides(color = guide_legend(ncol = 6)) +
  scale_shape_manual(values = shape_vector) +
  scale_color_manual(values = color_vector) +
  labs(
    x = "Effect size in r"
  ) +
  theme(
    axis.ticks = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    legend = element_blank(), # TODO
    plot.margin = margin(t = 10, r = 20, b = 10, l = 10, "pt"),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    # axis.text.y=element_text(margin = margin(1, unit = "cm"), vjust =1.5)
    )

ggsave(here::here("figures/effect_main_plot.jpg"), effect_main_plot, width = 8.27, height = 11.69, dpi = 300)

effect_main_plot
```

## What percentage of the new effect sizes were beyond the tolerance region?
### By paper

```{r}
effect_region_all_data <- calculate_tolerance_region(processed, Paper_ID)
  
effect_region_all_plot <- plot_tolarence_region(effect_region_all_data, Paper_ID)

ggsave(here::here("figures/effect_region_all_plot.jpg"), effect_region_all_plot, width = 8.27, height = 11.69, dpi = 300)

effect_region_all_plot
```

### By discipline

```{r}
processed %>% 
  distinct(Paper_ID, .keep_all = T) %>% 
  count(Paper_Discipline) %>% 
  arrange(n)

effect_region_discipline_data <- 
  processed %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  mutate(Paper_Discipline = str_to_title(Paper_Discipline)) %>% 
  calculate_tolerance_region(., Paper_Discipline)

effect_region_discipline_plot <- plot_tolarence_region(effect_region_discipline_data, Paper_Discipline)

ggsave(here::here("figures/effect_region_discipline_plot.jpg"), effect_region_discipline_plot, dpi = 300)

effect_region_discipline_plot
```

```{r}
processed %>% 
  distinct(Paper_ID, .keep_all = T) %>% 
  count(Paper_Discipline) %>% 
  arrange(n)

effect_robustness_discipline_data <-
  processed %>% 
  filter(Paper_Discipline %in% c("psychology", "economics", "political science")) %>% 
  mutate(Paper_Discipline = str_to_title(Paper_Discipline)) %>% 
  calculate_robustness(Paper_Discipline)


effect_robustness_discipline_plot <- plot_robustness(effect_robustness_discipline_data, Paper_Discipline)

ggsave(here::here("figures/effect_robustness_discipline_plot.jpg"), effect_robustness_discipline_plot, dpi = 300)

effect_robustness_discipline_plot 
```

### By expertise

There are `r processed %>% filter(is.na(Expertise_Self_Rating)) %>% nrow()` missing values for the expertise survey question.

```{r}
processed %>% 
  distinct(Expertise_Self_Rating)

effect_region_expertise_data <- calculate_tolerance_region(processed, Expertise_Self_Rating)

effect_region_expertise_plot <- plot_tolarence_region(effect_region_expertise_data, Expertise_Self_Rating)

ggsave(here::here("figures/effect_region_expertise_plot.jpg"), effect_region_expertise_plot, dpi = 300)

effect_region_expertise_plot
```

### By suitability of their self-judged analysis

There are `r processed %>% filter(is.na(Confidence_in_Approach)) %>% nrow()` missing values for the suitability of the analysis survey question.

```{r}
processed %>% 
  distinct(Confidence_in_Approach)

effect_region_suitability_data <- calculate_tolerance_region(processed, Confidence_in_Approach)

effect_region_suitability_plot <- plot_tolarence_region(effect_region_suitability_data, Confidence_in_Approach)

ggsave(here::here("figures/effect_region_suitability_plot.jpg"), effect_region_suitability_plot, dpi = 300)

effect_region_suitability_plot
```

### By sample size

There are `r processed %>% filter(is.na(Model_Sample_Size)) %>% nrow()` missing values for the sample size survey question.

```{r}


```

